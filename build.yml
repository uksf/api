trigger:
  branches:
    include:
      - main

pool: Avengers

jobs:
  - job: Test
    displayName: Test
    steps:
      - task: DotNetCoreCLI@2
        displayName: 'Test'
        inputs:
          command: 'test'
          projects: '**/*.Tests*.csproj'
          arguments: '-c Release /p:CollectCoverage=true /p:CoverletOutputFormat=opencover'

  - job: Publish
    displayName: Publish
    dependsOn: Test
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
    steps:
      - task: DotNetCoreCLI@2
        displayName: 'Publish API'
        inputs:
          command: publish
          publishWebProjects: false
          projects: '**/UKSF.Api.csproj'
          arguments: '-c Release --output $(Build.BinariesDirectory)/UKSF.Api'
          zipAfterPublish: false
          modifyOutputPath: false

      - task: ArchiveFiles@2
        displayName: 'Zip API Artifact'
        inputs:
          rootFolderOrFile: '$(Build.BinariesDirectory)/UKSF.Api'
          includeRootFolder: false
          archiveType: 'zip'
          archiveFile: '$(Build.ArtifactStagingDirectory)/UKSF.Api.zip'
          replaceExistingArchive: true

      - task: PublishBuildArtifacts@1
        displayName: 'Publish Artifact'
        inputs:
          PathtoPublish: '$(build.artifactstagingdirectory)/UKSF.Api.zip'
          ArtifactName: 'UKSF.Api'
          publishLocation: 'Container'
